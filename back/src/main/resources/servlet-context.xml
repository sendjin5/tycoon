<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--       xmlns:context="http://www.springframework.org/schema/context"-->
<!--       xmlns:mvc="http://www.springframework.org/schema/mvc"-->
<!--       xmlns:websocket="http://www.springframework.org/schema/websocket"-->
<!--       xsi:schemaLocation="http://www.springframework.org/schema/beans-->
<!--       http://www.springframework.org/schema/beans/spring-beans.xsd-->
<!--       http://www.springframework.org/schema/context-->
<!--       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd-->
<!--       http://www.springframework.org/schema/websocket https://www.springframework.org/schema/websocket/spring-websocket.xsd">-->
<!--    &lt;!&ndash;-->
<!--            spring bean 등록하기-->
<!--            bean태그를 이용해서 등록-->
<!--            id: bean을 구분하는 이름-->
<!--            class: spring bean 으로 등록할 클래스, 패키지명.클래스명으로 작성-->
<!--    &ndash;&gt;-->




<!--    &lt;!&ndash;-->
<!--        어노테이션으로 등록된 spring bean 찾기-->
<!--        <context:componet-scan>태그를 이용 -> springbean 검색하는 기준을 설정-->
<!--        basepackage="기준패키지"-->
<!--        context 가 붙은 것은 별도의 설정이 필요하다.-->
<!--    &ndash;&gt;-->

<!--    &lt;!&ndash;com.bs.spring 패키지 내부에 있는 모든 클래스 검색 . &ndash;&gt;-->
<!--    <context:component-scan base-package="com.bs.spring"/>-->
<!--    &lt;!&ndash;-->
<!--        mvc모듈에서 @Controller 기능 수행하기-->
<!--        <mvc:anotaion-driven/> 태그를 이용해서 controller 활성화-->
<!--    &ndash;&gt;-->
<!--    <mvc:annotation-driven />-->

<!--    &lt;!&ndash;web mvc 설정하기&ndash;&gt;-->
<!--    &lt;!&ndash;resource 설정하기&ndash;&gt;-->
<!--    &lt;!&ndash;** 면 계층 상관없이 다 검색한다.&ndash;&gt;-->
<!--    &lt;!&ndash;webapp 밑에서 찾기시작한다.&ndash;&gt;-->
<!--    <mvc:resources mapping="/resources/**" location="/resources/"/>-->

<!--    &lt;!&ndash;-->
<!--        기본 viewresolver 등록하기-->
<!--        클라이언트에게 응답을 처리하는 객체를 말한다.-->
<!--        JSP로 응답하는 viewresolver 등록하기-->
<!--        MVC모듈이 해당 객체를 가져다 쓰도록 만들었다.-->
<!--        뷰리졸버는 매핑값에서 반환형 있을떄, 뷰리졸버 실행된다.-->
<!--        기본적으로 String 값이 반환된다.-->
<!--        viewResolver를 재정의 해서 쓸수 있다.-->

<!--    &ndash;&gt;-->
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        <property name="suffix" value=".jsp"/>-->
<!--        <property name="prefix" value="/WEB-INF/views/"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash;인터셉터이용하기&ndash;&gt;-->
<!--    &lt;!&ndash;    <bean id="basicinter" class="com.bs.spring.common.interceptor.BasicInterceptor"/>&ndash;&gt;-->


<!--&lt;!&ndash;    <mvc:interceptors>&ndash;&gt;-->
<!--&lt;!&ndash;        <mvc:interceptor>&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:mapping path="/member/**"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <ref bean="basicinter"/>&ndash;&gt;-->
<!--&lt;!&ndash;        </mvc:interceptor>&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;        <mvc:interceptor>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;            <mvc:mapping path="/**/"/>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;            <mvc:exclude-mapping path="/"/>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;            <mvc:exclude-mapping path="/member/**"/>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;            <mvc:exclude-mapping path="/resources/**"/>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;            <ref bean="loginCheck"/>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash;        </mvc:interceptor>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;    </mvc:interceptors>&ndash;&gt;-->

<!--    &lt;!&ndash;multipart resolver 등록하기&ndash;&gt;-->
<!--    <bean id="multipartResolver"-->
<!--          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
<!--        <property name="maxUploadSize" value="104857600"/>-->
<!--    </bean>-->

<!--&lt;!&ndash;    &lt;!&ndash;웹소켓서버 등록하기&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;    <bean id="chatting" class="com.bs.spring.common.websocket.ChattingServer"/>&ndash;&gt;-->

<!--&lt;!&ndash;    <websocket:handlers>&ndash;&gt;-->
<!--&lt;!&ndash;        <websocket:mapping path="/chatting" handler="chatting"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <websocket:handshake-interceptors>&ndash;&gt;-->
<!--&lt;!&ndash;            <bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>&ndash;&gt;-->
<!--&lt;!&ndash;        </websocket:handshake-interceptors>&ndash;&gt;-->
<!--&lt;!&ndash;    </websocket:handlers>&ndash;&gt;-->
<!--</beans>-->